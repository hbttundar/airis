# For more information: https://laravel.com/docs/indra
version: "3"
services:
  ## web service ############################################################################################################################
  web:
    build:
      context: ./docker/web
      args:
        WWWGROUP: "${WWWGROUP}"
        WWWUSER: "${WWWUSER}"
        PHP_VERSION: "${PHP_VERSION}"
        INSTALL_XDEBUG: "${INSTALL_XDEBUG}"
        DEFAULT_WEB_SERVER: "${DEFAULT_WEB_SERVER}"
    environment:
      LARAVEL_INDRA: 1
    networks:
      - indra
    volumes:
      - "./:/var/www/html/"
      - "./storage/:/var/www/html/storage/:rw"
      - "${PHP_LOCAL_CONFIG}:/etc/php/${PHP_VERSION}/apache2/conf.d/override_php.ini"
      - "${MSMTP_LOCAL_CONFIG}:/etc/msmtprc"
    depends_on:
      - mysql
      - redis
      - meilisearch
      - selenium
    links:
      - proxy:www.stage.indra.de
      - proxy:www.live.indra.de
      - proxy:www.indra.de
    container_name: ${WEB_CONTAINER_NAME}
  ### playground #######################################################################################################
  playground:
    build:
      context: ./docker/playground
      args:
        PHP_VERSION: "${PHP_VERSION}"
        APP_ENV: "${APP_ENV}"
    restart: always
    volumes:
      - ../playground:/var/www/html/
      - ./docker/local_config/msmtp:/etc/msmtp_local_conf
      - ./docker/local_config/php:/usr/local/etc/php/dev.d
    environment:
      HP_INI_SCAN_DIR: "/usr/local/etc/php/dev.d:/usr/local/etc/php/conf.d"
      zend_extension: "/usr/local/lib/php/extensions/no-debug-non-zts-20190902/xdebug.so"
    depends_on:
      - mysql
    links:
      - proxy:www.playground.localhost
      - proxy:playground.localhost
    networks:
      - indra
    container_name: ${PLAYGROUND_CONTAINER_NAME}
  ### proxy ############################################################################################################
  proxy:
    build: 
      context: ./docker/proxy
      args:
        DEFAULT_WEB_SERVER: "${DEFAULT_WEB_SERVER}"
    ports:
      - '80:80'
      - '443:443'
    networks:
      - indra
    container_name: ${PROXY_CONTAINER_NAME}
  ### hostmachine ######################################################################################################
  hostmachine:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    deploy:
      resources:
        limits:
          memory: 8M
    restart: on-failure
    networks:
      - indra
    container_name: ${HOSTMACHINE_CONTAINER_NAME}
  ### composer #########################################################################################################
  composer:
    build:
      context: ./docker/composer/
    working_dir: /var/www/html/
    volumes:
      - "./:/var/www/html/"
    command: [ "install", "--ignore-platform-reqs" ]
    user: ${WWWUSER}
    networks:
      - indra
    container_name: ${COMPOSER_CONTAINER_NAME}
  ## mysql service ##########################################################################################################################
  mysql:
    image: "mysql:8.0"
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "indramysql:/var/lib/mysql"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
    networks:
      - indra
    container_name: ${MYSQL_CONTAINER_NAME}
  ## redis service ##########################################################################################################################
  redis:
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "indraredis:/data"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      - indra
    container_name: ${REDIS_CONTAINER_NAME}
  ## meilisearch service ####################################################################################################################
  meilisearch:
    image: "getmeili/meilisearch:latest"
    ports:
      - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    volumes:
      - "indrameilisearch:/data.ms"
    healthcheck:
      test:
        [
            "CMD",
            "wget",
            "--no-verbose",
            "--spider",
            "http://localhost:7700/health",
        ]
      retries: 3
      timeout: 5s
    networks:
      - indra
    container_name: ${SEARCH_ENGINE_CONTAINER_NAME}
  ## mailhog service ########################################################################################################################
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "${FORWARD_MAILHOG_PORT:-1025}:1025"
      - "${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025"
    networks:
      - indra
    container_name: ${MAIL_SERVICE_CONTAINER_NAME}
  ## selenium service ########################################################################################################################
  selenium:
    image: "selenium/standalone-chrome"
    volumes:
      - "/dev/shm:/dev/shm"
    networks:
      - indra
    container_name: ${SELENIUM_CONTAINER_NAME}
  ### mongo ############################################################################################################
  mongo:
    image: mongo:4.2
    networks:
      - indra
    container_name: ${MONOGO_CONTAINER_NAME}
  ###ElasticSearch #####################################################################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - indra
    container_name: ${ELASTICSEARCH_CONTAINER_NAME}
  ### graylog ############################################################################################################
  graylog:
    image: graylog/graylog:4.0
    volumes:
      - indragraylog:/usr/share/graylog/data/journal
      - ./docker/graylog/config/:/usr/share/graylog/data/config/
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=ebueroGraylogAdmin
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:7000/
    links:
      - mongo:mongo
      - elasticsearch
      - proxy:www.graylog.localhost
    depends_on:
      - mongo
      - elasticsearch
    networks:
      - indra
    ports:
      # Graylog web interface and REST API
      - 7000:9000
      # GELF http
      - 12201:12201
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 5555:5555
      # GELF UDP
      - 12201:12201/udp
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    restart: always
    container_name: ${GRAYLOG_CONTAINER_NAME}
networks:
  indra:
    driver: bridge
volumes:
  indramysql:
    driver: local
  indraredis:
    driver: local
  indrameilisearch:
    driver: local
  mongo:
    driver: local
  elasticsearch:
    driver: local
  indragraylog:
    driver: local